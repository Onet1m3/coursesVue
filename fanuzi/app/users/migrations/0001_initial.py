# Generated by Django 3.0.6 on 2021-01-14 11:28

import app.users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.CharField(blank=True, max_length=255, null=True)),
                ('about', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('phone_hidden', models.PositiveIntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=60, null=True)),
                ('remember_token', models.CharField(blank=True, max_length=300, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('can_be_impersonated', models.PositiveIntegerField(blank=True, null=True)),
                ('disable_comments', models.PositiveIntegerField(blank=True, null=True)),
                ('receive_advice', models.PositiveIntegerField(blank=True, null=True)),
                ('ip_addr', models.CharField(blank=True, max_length=50, null=True)),
                ('provider', models.CharField(blank=True, max_length=50, null=True)),
                ('provider_id', models.CharField(blank=True, max_length=50, null=True)),
                ('email_token', models.CharField(blank=True, max_length=32, null=True)),
                ('phone_token', models.CharField(blank=True, max_length=32, null=True)),
                ('verified_phone', models.PositiveIntegerField(blank=True, null=True)),
                ('blocked', models.PositiveIntegerField(blank=True, null=True)),
                ('closed', models.PositiveIntegerField(blank=True, null=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('payment_account', models.CharField(blank=True, max_length=191, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'user',
            },
            managers=[
                ('objects', app.users.models.UserManager()),
            ],
        ),
    ]
